The folder '/test1d' should be placed under the following path to perform a numerical comparison between Dipole1D and MARE2DEM:
$MARE2DEM/mare2dem_examples/demo/

1. use MARE2DEM Mambra2D.m to create a model. There are several key things to note:
a) Extend air to far distance, for example >=30 km;
b) Extend the last formation layer to far distance, to avoid edge effect in FEM computation;
c) Extend horizontal to long distance far away from last source and receiver, to avoid edge effects.
d) Add a rectangular to place the regions of interest inside it, such that small triangles can be used to triangulate this region. The regions of interest means source and receivers are inside this rectangular box.
e) Use -1 for target length (length of the edge in the triangle) to triangulate the regions not of interest, such that big triangles can be applied adaptively.
f) Make sure to modify the line in test1d.0.resistivity such that the Tx and Rx information file has the same name as the one generated by step 2.

2. Then, use acquisition information to create an input .emdata file, which includes details of transmitters and receivers. This has been combined in one step in Makefile.
 2.1 'make all' will first compile code create_acquisition.f90 and create_emdata_file.f90;
 2.2 'make run' will run the executables in the following order: ./main_acqui; ./main_emdata;
 2.3 'make clean' will remove the executables after the files have been generated.

3. Finally, use MARE2DEM to perform the computation.
   mpirun -n 8 ../../../mare2dem_source/MARE2DEM test1d.0.resistivity output
   where output is the prefix of the resulting response file after computation.

4. Visualize the comparison by 'python plot_emdata.py'. The analytical solution from Dipole1D is in emf_0000.
  python plot_emdata.py
